{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\styli\\\\OneDrive\\\\Desktop\\\\Ascessment\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport FileUploader from './FileUploader';\nimport Playlist from './Playlist';\nimport AudioPlayer from './AudioPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [currentFileIndex, setCurrentFileIndex] = useState(0);\n  const handleFileUpload = file => {\n    setFiles([...files, file]);\n  };\n  const handlePlay = file => {\n    const index = files.indexOf(file);\n    setCurrentFileIndex(index);\n  };\n  const handleEnded = () => {\n    if (currentFileIndex < files.length - 1) {\n      setCurrentFileIndex(currentFileIndex + 1);\n    }\n  };\n  useEffect(() => {\n    // Save and load currentFileIndex in local storage for persistence\n    localStorage.setItem('currentFileIndex', JSON.stringify(currentFileIndex));\n  }, [currentFileIndex]);\n  useEffect(() => {\n    // Load currentFileIndex from local storage on page reload\n    const savedIndex = JSON.parse(localStorage.getItem('currentFileIndex'));\n    if (savedIndex !== null && savedIndex < files.length) {\n      setCurrentFileIndex(savedIndex);\n    }\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FileUploader, {\n      onFileUpload: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n      files: files,\n      onPlay: handlePlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AudioPlayer, {\n      currentFile: files[currentFileIndex],\n      onEnded: handleEnded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yD7HK5vL6TyeZTU81JqLBlMk0bQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FileUploader","Playlist","AudioPlayer","jsxDEV","_jsxDEV","App","_s","files","setFiles","currentFileIndex","setCurrentFileIndex","handleFileUpload","file","handlePlay","index","indexOf","handleEnded","length","localStorage","setItem","JSON","stringify","savedIndex","parse","getItem","children","onFileUpload","fileName","_jsxFileName","lineNumber","columnNumber","onPlay","currentFile","onEnded","_c","$RefreshReg$"],"sources":["C:/Users/styli/OneDrive/Desktop/Ascessment/my-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport FileUploader from './FileUploader';\nimport Playlist from './Playlist';\nimport AudioPlayer from './AudioPlayer';\n\nconst App = () => {\n  const [files, setFiles] = useState([]);\n  const [currentFileIndex, setCurrentFileIndex] = useState(0);\n\n  const handleFileUpload = (file) => {\n    setFiles([...files, file]);\n  };\n\n  const handlePlay = (file) => {\n    const index = files.indexOf(file);\n    setCurrentFileIndex(index);\n  };\n\n  const handleEnded = () => {\n    if (currentFileIndex < files.length - 1) {\n      setCurrentFileIndex(currentFileIndex + 1);\n    }\n  };\n\n  useEffect(() => {\n    // Save and load currentFileIndex in local storage for persistence\n    localStorage.setItem('currentFileIndex', JSON.stringify(currentFileIndex));\n  }, [currentFileIndex]);\n\n  useEffect(() => {\n    // Load currentFileIndex from local storage on page reload\n    const savedIndex = JSON.parse(localStorage.getItem('currentFileIndex'));\n    if (savedIndex !== null && savedIndex < files.length) {\n      setCurrentFileIndex(savedIndex);\n    }\n  }, [files]);\n\n  return (\n    <div>\n      <FileUploader onFileUpload={handleFileUpload} />\n      <Playlist files={files} onPlay={handlePlay} />\n      <AudioPlayer\n        currentFile={files[currentFileIndex]}\n        onEnded={handleEnded}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAE3D,MAAMa,gBAAgB,GAAIC,IAAI,IAAK;IACjCJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEK,IAAI,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAID,IAAI,IAAK;IAC3B,MAAME,KAAK,GAAGP,KAAK,CAACQ,OAAO,CAACH,IAAI,CAAC;IACjCF,mBAAmB,CAACI,KAAK,CAAC;EAC5B,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIP,gBAAgB,GAAGF,KAAK,CAACU,MAAM,GAAG,CAAC,EAAE;MACvCP,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;IAC3C;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd;IACAmB,YAAY,CAACC,OAAO,CAAC,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACZ,gBAAgB,CAAC,CAAC;EAC5E,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtBV,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,UAAU,GAAGF,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAAC,kBAAkB,CAAC,CAAC;IACvE,IAAIF,UAAU,KAAK,IAAI,IAAIA,UAAU,GAAGf,KAAK,CAACU,MAAM,EAAE;MACpDP,mBAAmB,CAACY,UAAU,CAAC;IACjC;EACF,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC;EAEX,oBACEH,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACJ,YAAY;MAAC0B,YAAY,EAAEf;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChD1B,OAAA,CAACH,QAAQ;MAACM,KAAK,EAAEA,KAAM;MAACwB,MAAM,EAAElB;IAAW;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9C1B,OAAA,CAACF,WAAW;MACV8B,WAAW,EAAEzB,KAAK,CAACE,gBAAgB,CAAE;MACrCwB,OAAO,EAAEjB;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1CID,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA4CT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}